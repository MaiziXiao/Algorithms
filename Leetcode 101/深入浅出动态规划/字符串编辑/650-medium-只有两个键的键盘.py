from math import sqrt


class Solution:
    def minSteps(self, n: int) -> int:
        """
         最初在一个记事本上只有一个字符 'A'。你每次可以对这个记事本进行两种操作：

        Copy All (复制全部) : 你可以复制这个记事本中的所有字符(部分的复制是不允许的)。
        Paste (粘贴) : 你可以粘贴你上一次复制的字符。
        给定一个数字 n 。你需要使用最少的操作次数，在记事本中打印出恰好 n 个 'A'。输出能够打印出 n 个 'A' 的最少操作次数。

        示例 1:

        输入: 3
        输出: 3
        解释:
        最初, 我们只有一个字符 'A'。
        第 1 步, 我们使用 Copy All 操作。
        第 2 步, 我们使用 Paste 操作来获得 'AA'。
        第 3 步, 我们使用 Paste 操作来获得 'AAA'。
        """
        # dp[i]表示延长到i需要最少的操作次数
        # 对于每个位置j,如果j可以被i整除，那么长度i就可以由长度j操作得到，其操作等价于把一个长度为1的A延长到长度i/j
        # n就代表屏幕上有n个A，所以这里是n+1
        dp = [0] * (n + 1)

        # 屏幕上恰好有i个A的情况
        for i in range(2, n + 1):
            # base case
            dp[i] = i
            # 粘贴板里有 j个A
            for j in range(2, int(sqrt(i) + 1)):
                # 只有满足 屏幕上的A的个数i % 粘贴板里的A的个数j 为0 才可以进行全选复制+粘贴操作， 操作数恰好为i//j
                if i % j == 0:
                    # dp[j] 表示当屏幕上A的个数恰好为j的时候
                    # 最少的操作数 dp[j] + 全选复制+粘贴操作 i//j 就是新的 操作数，重复这个过程取最小
                    dp[i] = dp[j] + dp[i // j]
        return dp[n]
