给定值的比较次数等于给定值节点在二叉排序树中的层数。如果二叉排序树是平衡的，
则n个节点的二叉排序树的高度为Log2(n+1),其查找效率为O(Log2n)，近似于折半查找。
如果二叉排序树完全不平衡，则其深度可达到n，查找效率为O(n)，退化为顺序查找。
一般的，二叉排序树的查找性能在O(Log2n)到O(n)之间。因此，为了获得较好的查找性能，就要构造一棵平衡的二叉排序树。

前序，中序，后序遍历：时间复杂度O(n)， 空间复杂度O(n)（递归本身占用stack空间或者用户自定义的stack）
DFS，BFS：时间复杂度O(n)，空间复杂度O(n)（递归本身占用stack空间或者用户自定义的stack）
在最坏情况下，当二叉树中每个节点只有一个孩子节点时，递归的层数为 N，此时空间复杂度为 O(N)。
在最好情况下，当二叉树为平衡二叉树时，它的高度为 log⁡(N)，此时空间复杂度为 O(log⁡(N))。