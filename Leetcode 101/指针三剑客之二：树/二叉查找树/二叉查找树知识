二叉查找树（英語：Binary Search Tree），也称为二叉查找树、有序二叉树（ordered binary tree）或排序二叉树（sorted binary tree），是指一棵空树或者具有下列性质的二叉树：

若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值；
若任意节点的右子树不空，则右子树上所有节点的值均大于或等于它的根节点的值；
任意节点的左、右子树也分别为二叉查找树；
二叉查找树相比于其他数据结构的优势在于查找、插入的时间复杂度较低。为O(nlogn)。二叉查找树是基础性数据结构，用于构建更为抽象的数据结构，如集合、多重集、关联数组等。


给定值的比较次数等于给定值节点在二叉排序树中的层数。如果二叉排序树是平衡的，则n个节点的二叉排序树的高度为Log_2(n+1),
其查找效率为O(Log_2 n)，近似于折半查找。如果二叉排序树完全不平衡，则其深度可达到n，查找效率为O(n)，退化为顺序查找。
一般的，二叉排序树的查找性能在O(Log_2 n)到O(n)之间。因此，为了获得较好的查找性能，就要构造一棵平衡的二叉排序树。